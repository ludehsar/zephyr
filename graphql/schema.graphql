type Client {
  client: User
  project: Project
}

type Developer {
  developer: User
  hourlyRate: Float!
  project: Project
}

type Mutation {
  createProject(hourlyRate: Float!, projectId: String!, title: String!): Project!
  deleteProject(projectId: String!): Project!
  updateProject(projectId: String!, title: String!): Project!
}

type Project {
  projectId: String!
  title: String
}

type Query {
  clientProjects: [Client!]
  developerProjects: [Developer!]
  project(projectId: String!): Project
  session: User
}

type User {
  email: String!
  name: String
  plan: String
  premiumTrialTaken: Boolean
  userId: String!
}